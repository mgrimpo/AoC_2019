/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.mgrimpo.adventofcode.year2019.days;


import de.mgrimpo.adventofcode.year2019.intcodemachine.IntCodeProgram;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class Day2 implements Day {

  private final IntCodeProgram puzzleInput;


  public Day2() throws IOException {
    puzzleInput = readPuzzleInput(Paths.get("input/day2_input.txt"));
  }

  @Override
  public String puzzleTwoSolution() {
    final var desiredOutput = 19690720;
    final var nounVerbCode = findInputForOutput(desiredOutput, puzzleInput);
    return String.format("The desired 'noun * 100 + verb' code is: %s", nounVerbCode);
  }

  private static int findInputForOutput(int desiredOutput, IntCodeProgram programMemory) {
    for (int nounVerbCode = 0; nounVerbCode < 10000; nounVerbCode++) {
      var noun = nounVerbCode / 100;
      var verb = nounVerbCode % 100;
      var programCopy = programMemory.clone();
      setVerbNounInput(programCopy, noun, verb);
      var resultMemory = programCopy.execute();
      if (resultMemory.valueAt(0 )== desiredOutput) return nounVerbCode;
    }
    throw new RuntimeException("No noun/verb combination for the desired output was found.");
  }

  private static void setVerbNounInput(IntCodeProgram program, int noun, int verb) {
    program.setMemory(1, noun);
    program.setMemory(2,  verb);
  }

  public String puzzleOneSolution() {
    restore1202AlarmState(puzzleInput);
    var resultIntCodeState = puzzleInput.execute();
    var puzzleOneSolution = resultIntCodeState.valueAt(0);
    return String.format("The value at position 0 is: %s", puzzleOneSolution);
  }

  private static void restore1202AlarmState(IntCodeProgram program) {
    setVerbNounInput(program, 12, 02);
  }

  private static IntCodeProgram readPuzzleInput(Path path) throws IOException {
    String fileContents = Files.readString(path);
    return IntCodeProgram.fromString(fileContents);
  }

}
