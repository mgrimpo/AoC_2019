/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.mgrimpo.adventofcode.year2019;

import de.mgrimpo.adventofcode.year2019.Day3.Coordinate;
import java.util.Set;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class Day3Test {

  @Test
  void exampleInputGivesCorrectDistance() {
    var examplePuzzleInput1 = "R75,D30,R83,U83,L12,D49,R71,U7,L72\nU62,R66,U55,R34,D71,R55,D58,R83".split("\n");
    var exampleSolution1 = 159;
    assertEquals(Day3.shortestDistanceToCentralPort(examplePuzzleInput1[0], examplePuzzleInput1[1]), exampleSolution1);
  }

  @Test
  void testManhattenDistance(){
    var a = new Coordinate(0,0);
    var b = new Coordinate(3,3);
    assertEquals(6, a.manhattanDistance(b));
  }

  @Test
  void testWireIntersectionFinding() {
    var wireOneDescription = "R8,U5,L5,D3";
    var wireTwoDescription = "U7,R6,D4,L4";
    var wireIntersectionPoints = Set.of(
        new Coordinate(3, 3),
        new Coordinate(6, 5)
    );
    assertEquals(wireIntersectionPoints, Day3.wireIntersectionPoints(wireOneDescription, wireTwoDescription));
  }

  @Test
  void parseWireDescriptionCorrectly() {
    var wireDescription = "R3,U2,L3,D3";
    Set<Coordinate> wireCoordinates =
        Set.of(
            new Coordinate(0, 0),
            new Coordinate(1, 0),
            new Coordinate(2, 0),
            new Coordinate(3, 0),
            new Coordinate(3, 1),
            new Coordinate(3, 2),
            new Coordinate(2, 2),
            new Coordinate(1, 2),
            new Coordinate(0, 2),
            new Coordinate(0, 1),
            // skip duplicate: new Coordinate(0,0),
            new Coordinate(0, -1));
    assertEquals(wireCoordinates, Day3.parseWireDescription(wireDescription));
  }

  @Test
  void testLineUp() {
    var line =
        Set.of(
            new Coordinate(0, 0), new Coordinate(0, 1), new Coordinate(0, 2), new Coordinate(0, 3));
    assertEquals(line, new Coordinate(0, 0).lineUp(3));
  }
}
